apiVersion: apps/v1
kind: Statefulset/ReplicationController
metadata:
  name: gateway
  namespace: {{ .Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app_label: {{ .Release.Name }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "gateway.name" . }}
      app_label: {{ .Release.Name }}
      version: v1

  templates:
    metadata:
      labels:
        app: {{ template "gateway.name" . }}
        app_label: {{ .Release.Name }}
        version: v1
    spec:
      containers:
      - name: gateway
        image: "{{ .Value.global.repo }}/{{ .Values.gateway.image.name }}:{{ .Value.global.tag }}"
        imagePullPolicy: Always
        resources:
{{toYaml .Values.gateway.resources | indent 10 }}
        env:
          - name: TEST
            value: {{ .Value.global.Env.Test }}
        command: ["/bin/bash", "-c", "./start.sh"]
        port:
          - containerPort: 9090
          - containerPort: 7070
      - name: mysql
        image: "{{ .Value.global.repo }}/{{ .Values.mysql.image.name }}:{{ .Value.global.tag }}"
        imagePullPolicy: Always
        ports:
          - containerPort: 3306
        resources:
{{toYaml .Values.mysql.resources | indent 10 }}
        volumeMounts:
          - name: mysqld-data
            mountPath: /var/lib/mysql
            subPath: mysql

      volumes:
      - name: urlconfig
        hostPath:
          path: /nfs

  volumeClaimTemplates:
  - metadata:
      name: mysqld-data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: "rbd"
      resources:
        requests:
          storage: 10Gi